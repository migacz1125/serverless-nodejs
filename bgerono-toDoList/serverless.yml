service: bgerono-todolist

# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

plugins:
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-offline #serverless-offline needs to be last in the list

custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
    migration:
      dir: offline

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  lambdaHashingVersion: 20201221
  region: eu-central-1
  environment:
    DYNAMODB_TABLE: ${self:service}-todoTable
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  create:
    handler: todos/create.create
    events:
      - httpApi:
          path: /todos
          method: post
  list:
    handler: todos/list.list
    events:
      - httpApi:
          path: /todos
          method: get
  item:
    handler: todos/item.item
    events:
      - httpApi:
          path: /todos/{id}
          method: get
  delete:
    handler: todos/delete.deleteList
    events:
      - httpApi:
          path: /todos/{id}
          method: delete

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: name
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
          -
            AttributeName: name
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
